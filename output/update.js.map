{"version":3,"file":"update.js","sourceRoot":"","sources":["../src/update.ts"],"names":[],"mappings":"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","sourcesContent":["import * as cron from \"cron\";\nimport * as fs from \"fs\";\nimport * as gracefulFs from \"graceful-fs\";\ngracefulFs.gracefulify(fs);\nimport * as http from \"http\";\nimport ErrnoException = NodeJS.ErrnoException;\nimport {OtherModel, OtherInstance} from \"./models/other\";\n\n//Create the job\nlet job = new cron.CronJob(\n    {\n        cronTime: '00 31 13 * * 5-7',\n        onTick: function()\n        {\n            //Runs every weekday (Monday through Friday)\n            //at 16:24:00 AM. It does not run on Saturday\n            //or Sunday.\n            updateDB();\n        },\n        start: true,\n        timeZone: 'America/Montreal'\n    }\n);\n\n//Launch the Job!\njob.start();\n\nexport let updateDB = function()\n{\n    download(\"http://www.orphadata.org/data/export/en_product1.json\",__dirname+\"/../resources/en_product1.json\")\n        .then(()=> {return isThereAnUpdateForDiseasesList()} )\n        .catch(() =>\n            {\n                console.error(\"Error!!\");\n            }\n        )\n        .then(()=>{console.error(\"Update detected test!!\");})\n        .catch(() =>\n        {\n            console.error(\"No update test!!\");\n        }\n    );\n};\n\nexport let download = function(url:string, dest:string)\n{\n    return new Promise((resolve, reject)=>\n    {\n        console.info(\"Download of file \"+dest+\" start...\");\n        let file = fs.createWriteStream(dest);\n        http.get(url, function(response) {\n            response.pipe(file);\n            file.on('finish', function() {\n                console.info(\"Download finished\");\n                file.close();  // close() is async, call cb after close completes.\n                resolve();\n            });\n        }).on('error', function(err) {\n            // Handle errors\n            fs.unlink(dest, reject); // Delete the file async. (But we don't check the result)\n        });\n    }\n    );\n};\n\nexport let isThereAnUpdateForDiseasesList =  function()\n{\n    return new Promise((resolve, reject) =>\n    {\n        let json = require(__dirname+\"/../resources/en_product1.json\");\n        let lastUpdateDateFromJSON=json.JDBOR[0].date.substring(0, 10);\n\n        return OtherModel.findOne()\n            .then(\n                otherTable=>\n                {\n                    console.log(\"DB: \"+otherTable.lastUpdatedate+\", JSON: \"+lastUpdateDateFromJSON);\n\n                    let lastUpdateDateFromDB=new Date(Date.parse(otherTable.lastUpdatedate.toDateString()));\n                    let lastUpdateDateFromJSON_DATE=new Date(Date.parse(lastUpdateDateFromJSON));\n\n                    if(lastUpdateDateFromDB === undefined || lastUpdateDateFromDB === null\n                        || lastUpdateDateFromJSON_DATE > lastUpdateDateFromDB)\n                    {\n                        console.log(\"Update found\");\n                        return OtherModel.update(\n                            {\n                                idOther: 1,\n                                lastUpdatedate: lastUpdateDateFromJSON\n                            },\n                            { where: { idOther: 1 } }\n                            )\n                            .then(()=>{resolve();})\n                            .catch(()=>{reject()});\n                    }\n                    else\n                    {\n                        console.log(\"No update found\");\n                        reject();\n                    }\n                }\n            );\n    }\n    );\n};\n\n"]}