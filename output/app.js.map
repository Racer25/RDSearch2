{"version":3,"file":"app.js","sourceRoot":"","sources":["../src/app.ts"],"names":[],"mappings":";;AAAA;;GAEG;AACH,mCAAmC;AACnC,0CAA0C;AAC1C,6CAA6C;AAE7C;;GAEG;AACH,4DAA4D;AAC5D,kEAAkE;AAClE,+DAA+D;AAE/D;;GAEG;AACH,MAAM,GAAG,GAAG,OAAO,EAAE,CAAC;AACtB,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AACtB,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,MAAM,CAAC,SAAS,GAAG,gBAAgB,CAAC,CAAC,CAAC;AACjE,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AACnD,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;AAEhC;;GAEG;AACH,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC;AACnC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,cAAc,CAAC,QAAQ,CAAC,CAAC;AAC3C,GAAG,CAAC,GAAG,CAAC,4BAA4B,EAAE,cAAc,CAAC,cAAc,CAAC,CAAC;AACrE,GAAG,CAAC,GAAG,CAAC,2BAA2B,EAAE,cAAc,CAAC,aAAa,CAAC,CAAC;AACnE,GAAG,CAAC,GAAG,CAAC,oBAAoB,EAAE,cAAc,CAAC,cAAc,CAAC,CAAC;AAE7D,GAAG,CAAC,GAAG,CAAC,sBAAsB,EAAE,iBAAiB,CAAC,UAAU,CAAC,CAAC;AAC9D,GAAG,CAAC,GAAG,CAAC,0BAA0B,EAAE,iBAAiB,CAAC,aAAa,CAAC,CAAC;AACrE,GAAG,CAAC,GAAG,CAAC,2BAA2B,EAAE,iBAAiB,CAAC,cAAc,CAAC,CAAC;AACvE,GAAG,CAAC,GAAG,CAAC,yCAAyC,EAAE,iBAAiB,CAAC,4BAA4B,CAAC,CAAC;AACnG,GAAG,CAAC,GAAG,CAAC,4CAA4C,EAAE,iBAAiB,CAAC,wBAAwB,CAAC,CAAC;AAClG,GAAG,CAAC,GAAG,CAAC,gCAAgC,EAAE,iBAAiB,CAAC,YAAY,CAAC,CAAC;AAC1E,GAAG,CAAC,GAAG,CAAC,+BAA+B,EAAE,iBAAiB,CAAC,WAAW,CAAC,CAAC;AAExE;;GAEG;AACH,GAAG,CAAC,GAAG,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;AAElC;;GAEG;AACH,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC;AAExB;;GAEG;AACH,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;IACxB,OAAO,CAAC,GAAG,CAAC,CAAC,yCAAyC,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;IAC1E,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC","sourcesContent":["/**\n * Module dependencies.\n */\nimport * as express from \"express\";\nimport * as bodyParser from \"body-parser\";\nimport * as errorHandler from \"errorhandler\";\n\n/**\n * Controllers (route handlers).\n */\nimport * as homeController from \"./controllers/routes/home\";\nimport * as diseaseController from \"./controllers/routes/disease\";\nimport * as errorController from \"./controllers/routes/errors\";\n\n/**\n * Server configuration (session, static, ...)\n */\nconst app = express();\napp.set(\"port\", 8080);\napp.use('/static', express.static(__dirname + '/../src/public'));\napp.use(bodyParser.urlencoded({ extended: true }));\napp.set('views', \"./src/views\");\n\n/**\n * App routes.\n */\napp.get(\"/\", homeController.index);\napp.get(\"/years\", homeController.getYears);\napp.get(\"/suggestions/:searchString\", homeController.getSuggestions);\napp.get(\"/exactMatch/:searchString\", homeController.getExactMatch);\napp.get(\"/topDiseases/:year\", homeController.getTopDiseases);\n\napp.get(\"/disease/:orphanetID\", diseaseController.getDisease);\napp.get(\"/disease/:orphanetID/all\", diseaseController.getDiseaseAll);\napp.get(\"/disease/:orphanetID/info\", diseaseController.getDiseaseInfo);\napp.get(\"/disease/:orphanetID/textualInformation\", diseaseController.getDiseaseTextualInformation);\napp.get(\"/disease/:orphanetID/mostCitedPublications\", diseaseController.getMostCitedPublications);\napp.get(\"/disease/:orphanetID/graphData\", diseaseController.getGraphData);\napp.get(\"/disease/:orphanetID/symptoms\", diseaseController.getSymptoms);\n\n/**\n * ERRORS\n */\napp.use(errorController.error404);\n\n/**\n * Error Handler. Provides full stack - remove for production\n */\napp.use(errorHandler());\n\n/**\n * Start Express server.\n */\napp.listen(app.get(\"port\"), () => {\n    console.log((\"  App is running at http://localhost:%d\"), app.get(\"port\"));\n    console.log(\"  Press CTRL-C to stop\\n\");\n});\n\nmodule.exports = app;"]}